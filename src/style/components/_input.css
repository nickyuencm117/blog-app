.input-container {
    margin-bottom: var(--spacing4);
}

.input-container > div {
    position: relative;
}

.input-container input::placeholder {
    color: transparent;
}

.input-container label {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: var(--spacing2);
    background-color: var(--color-base-100);
    padding: 0 var(--spacing2);
    transition: transform 130ms linear;
    border: none;
    user-select: none;
}

.input-container input.invalid:placeholder-shown {
    background-color: var(--color-base-100);
    border: solid  var(--color-base-content) var(--border);
    color: var(--color-base-content)
}

.input-container input:focus,
.input-container input:focus:placeholder-shown {
    border: solid var(--color-info) var(--border);
}

.input-container input.invalid,
.input-container input.invalid:not(:placeholder-shown) {
    color: var(--color-error);
    border: solid var(--color-error) var(--border);
}

.input-container input:focus + label,
.input-container input:focus:not(:placeholder-shown) + label,
.input-container input:not(:placeholder-shown) + label {
    font: var(--font6);
    transform: translate(2rem, -2.6rem);
}

.input-container input:not(:placeholder-shown) + label {
    color: var(--color-base-content);
}

.input-container input:focus + label,
.input-container input:focus:not(:placeholder-shown) + label {
    color: var(--color-info);
}

.input-container input.invalid:not(:placeholder-shown) + label,
.input-container:has(input.invalid:not(:placeholder-shown)):after {
    color: var(--color-error);
}

.input-container:has( input.invalid:not(:placeholder-shown)):after  {
    content: attr(data-help) ;  
    font: var(--font6);
}